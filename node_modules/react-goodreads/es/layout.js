var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';
import { css } from 'glamor';

var a = css({
    color: 'black',
    position: 'relative',
    textDecoration: 'none',
    ':hover': {
        cursor: 'pointer'
    },
    ':active': {
        top: '5px'
    }
});

var tablecss = css({
    border: '1px solid #ccc',
    borderCollapse: 'collapse',
    margin: 0,
    padding: 0,
    width: '100%',
    tableLayout: 'fixed',
    '@media(max-width: 600px)': {
        bordor: 0
    }
});

var tr = css({
    backgroundColor: '#f8f8f8',
    border: '1px solid #ddd',
    padding: '.35em',
    '@media(max-width: 600px)': {
        borderBottom: '3px solid #ddd',
        display: 'block',
        marginBottom: '.625em'
    }
});
var td = css({
    padding: '.625em',
    textAlign: 'center',
    '@media(max-width: 600px)': {
        borderBottom: '1px solid #ddd',
        display: 'block',
        fontSize: '1em',
        textAlign: 'right',
        ':before': {
            content: 'attr(data-label)',
            float: 'left',
            fontWeight: 'bold',
            textTransform: 'uppercase'
        },
        ':last-child ': {
            borderBottom: 0
        }
    }
});
var th = css({
    padding: '.625em',
    textAlign: 'center',
    fontSize: '.85em',
    letterSpacing: '.1em',
    textTransform: 'uppercase'
});
var thead = css({
    '@media(max-width: 600px)': {
        border: 'none',
        clip: 'rect(0 0 0 0)',
        height: '1px',
        margin: '-1px',
        overflow: 'hidden',
        padding: 0,
        position: 'absolute',
        width: '1px'
    }
});

var Layout = function Layout(props) {
    return React.createElement(
        'div',
        null,
        React.createElement(
            'table',
            tablecss,
            React.createElement(
                'thead',
                thead,
                React.createElement(
                    'tr',
                    tr,
                    React.createElement(
                        'th',
                        _extends({}, th, { scope: 'col' }),
                        props.bookCoverTitle !== undefined ? props.bookCoverTitle : 'Book Cover'
                    ),
                    React.createElement(
                        'th',
                        _extends({}, th, { scope: 'col' }),
                        props.bookNameTitle !== undefined ? props.bookNameTitle : 'Book Name'
                    ),
                    React.createElement(
                        'th',
                        _extends({}, th, { scope: 'col' }),
                        props.startAtTitle !== undefined ? props.startAtTitle : 'Started At'
                    ),
                    React.createElement(
                        'th',
                        _extends({}, th, { scope: 'col' }),
                        props.ratingTitle !== undefined ? props.ratingTitle : 'Rating'
                    )
                )
            ),
            React.createElement(
                'tbody',
                null,
                React.createElement(
                    'tr',
                    tr,
                    React.createElement(
                        'td',
                        _extends({ scope: 'row' }, td, { 'data-label': props.bookCoverTitle !== undefined ? props.bookCoverTitle : 'Book Cover' }),
                        React.createElement('img', { src: props.cover })
                    ),
                    React.createElement(
                        'td',
                        _extends({}, td, { 'data-label': props.bookNameTitle !== undefined ? props.bookNameTitle : 'Book Name' }),
                        React.createElement(
                            'a',
                            _extends({}, a, { href: props.url, target: '_blank', rel: 'noopener noreferrer' }),
                            props.name
                        )
                    ),
                    React.createElement(
                        'td',
                        _extends({}, td, { 'data-label': props.startAtTitle !== undefined ? props.startAtTitle : 'Started At' }),
                        props.started
                    ),
                    React.createElement(
                        'td',
                        _extends({}, td, { 'data-label': props.ratingTitle !== undefined ? props.ratingTitle : 'Rating' }),
                        props.rating
                    )
                )
            )
        )
    );
};
export default Layout;